{"ast":null,"code":"var _jsxFileName = \"D:\\\\wordunscramble\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState } from \"react\";\nimport Axios from \"axios\";\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport levenshtein from \"js-levenshtein\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [userinput, getWord] = useState(\"\");\n  const [nowordfounds, nowordfound] = useState(\"\");\n  const [total_word, total_word_found] = useState(\"\");\n  /* UseState For Print Data Character Wise */\n\n  const two_char = [];\n  const three_char = [];\n  const four_char = [];\n  const five_char = [];\n  const six_char = [];\n  const seven_char = [];\n  const eight_char = [];\n  var two_count = 0;\n  var three_count = 0;\n  var four_count = 0;\n  var five_count = 0;\n  var six_count = 0;\n  var seven_count = 0;\n  var eight_count = 0;\n  const [two_characters, two_character] = useState(\"\");\n  const [three_characters, three_character] = useState(\"\");\n  const [four_characters, four_character] = useState(\"\");\n  const [five_characters, five_character] = useState(\"\");\n  const [six_characters, six_character] = useState(\"\");\n  const [seven_characters, seven_character] = useState(\"\");\n  const [eight_characters, eight_character] = useState(\"\");\n  const [two_counts, two_word_count] = useState(\"\");\n  const [three_counts, three_word_count] = useState(\"\");\n  const [four_counts, four_word_count] = useState(\"\");\n  const [five_counts, five_word_count] = useState(\"\");\n  const [six_counts, six_word_count] = useState(\"\");\n  const [seven_counts, seven_word_count] = useState(\"\");\n  const [eight_counts, eight_word_count] = useState(\"\");\n  /* On Button Click Call Function */\n\n  const getWords = event => {\n    const inputText = document.getElementsByName(\"userinput\")[0].value;\n    const startwith = document.getElementsByName(\"startwith\")[0].value;\n    const endwith = document.getElementsByName(\"endwith\")[0].value;\n    const inputText_length = inputText.length; //post data to the node/express for data\n\n    Axios.post('http://localhost:8000/create', {\n      name: inputText,\n      startwith: startwith,\n      endwith: endwith\n    }).then(Response => {\n      // console.log(Response.data);\n\n      /* Condition For Print Data Character Wise  START */\n      if (Response.data.length != 0) {\n        /*  Print Total Finded Word */\n        const total_words = Response.data.length;\n        total_word_found(total_words);\n        /* Print Data Character Wise */\n\n        Response.data.forEach(product => {\n          if (product.word.length == 2 && product.word.length <= inputText_length) {\n            two_char.push( /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", product.word, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this));\n            two_count++;\n\n            if (product.word.length == inputText_length) {\n              var compare_wrd = levenshtein(product.word, inputText);\n              console.log(compare_wrd);\n            }\n          }\n\n          if (product.word.length == 3 && product.word.length <= inputText_length) {\n            three_char.push( /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [product.word, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 30\n            }, this));\n            three_count++;\n\n            if (product.word.length == inputText_length) {\n              var compare_wrd = levenshtein(product.word, inputText);\n              console.log(compare_wrd);\n            }\n          }\n\n          if (product.word.length == 4 && product.word.length <= inputText_length) {\n            four_char.push( /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", product.word, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 28\n            }, this));\n            four_count++;\n\n            if (product.word.length == inputText_length) {\n              var compare_wrd = levenshtein(product.word, inputText);\n              console.log(compare_wrd);\n            }\n          }\n\n          if (product.word.length == 5 && product.word.length <= inputText_length) {\n            five_char.push( /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", product.word]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this));\n            five_count++;\n\n            if (product.word.length == inputText_length) {\n              var compare_wrd = levenshtein(product.word, inputText);\n              console.log(compare_wrd);\n            }\n          }\n\n          if (product.word.length == 6 && product.word.length <= inputText_length) {\n            six_char.push( /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", product.word]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 28\n            }, this));\n            six_count++;\n\n            if (product.word.length == inputText_length) {\n              var compare_wrd = levenshtein(product.word, inputText);\n              console.log(compare_wrd);\n            }\n          }\n\n          if (product.word.length == 7 && product.word.length <= inputText_length) {\n            seven_char.push( /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", product.word]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 30\n            }, this));\n            seven_count++;\n\n            if (product.word.length == inputText_length) {\n              var compare_wrd = levenshtein(product.word, inputText);\n              console.log(compare_wrd);\n            }\n          }\n\n          if (product.word.length == 8 && product.word.length <= inputText_length) {\n            eigth_char.push( /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", product.word]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 30\n            }, this));\n            eigth_count++;\n\n            if (product.word.length == inputText_length) {\n              var compare_wrd = levenshtein(product.word, inputText);\n              console.log(compare_wrd);\n            }\n          }\n        });\n        two_character(two_char);\n        three_character(three_char);\n        four_character(four_char);\n        five_character(five_char);\n        six_character(six_char);\n        seven_character(seven_char);\n        eight_character(eight_char);\n        two_word_count(two_count);\n        three_word_count(three_count);\n        four_word_count(four_count);\n        five_word_count(five_count);\n        six_word_count(six_count);\n        seven_word_count(seven_count);\n        eight_word_count(eight_count);\n      } else {\n        total_word_found(\"No Word Found\");\n      }\n\n      getWord(inputText);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Scrabble Letter Generator and Word Finder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter Letters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"userinput\",\n        id: \"userinput\",\n        placeholder: \"ENTER LETTERS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"startwith\",\n        id: \"startwith\",\n        placeholder: \"START WITH\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"endwith\",\n        id: \"endwith\",\n        placeholder: \"END WITH\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: event => getWords(),\n        children: \"Get Words\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"INPUTED WORD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: userinput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TOTAL WORDS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: total_word\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"WORDS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w3-panel w3-card w3-red\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"2 letters word (\", two_counts, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), two_characters]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w3-panel w3-card w3-red\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"3 letters word (\", three_counts, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), three_characters]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w3-panel w3-card w3-red\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"4 letters word (\", four_counts, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), four_characters]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w3-panel w3-card w3-red\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"5 letters word (\", five_counts, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), five_characters]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w3-panel w3-card w3-red\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"6 letters word (\", six_counts, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this), six_characters]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w3-panel w3-card w3-red\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"7 letters word (\", seven_counts, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this), seven_characters]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w3-panel w3-card w3-red\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"8 letters word (\", eight_counts, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this), eight_characters]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: nowordfounds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"adcaoBf44ydO00afMS2kcaZLnWM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/wordunscramble/client/src/App.js"],"names":["useState","Axios","Header","Footer","levenshtein","App","userinput","getWord","nowordfounds","nowordfound","total_word","total_word_found","two_char","three_char","four_char","five_char","six_char","seven_char","eight_char","two_count","three_count","four_count","five_count","six_count","seven_count","eight_count","two_characters","two_character","three_characters","three_character","four_characters","four_character","five_characters","five_character","six_characters","six_character","seven_characters","seven_character","eight_characters","eight_character","two_counts","two_word_count","three_counts","three_word_count","four_counts","four_word_count","five_counts","five_word_count","six_counts","six_word_count","seven_counts","seven_word_count","eight_counts","eight_word_count","getWords","event","inputText","document","getElementsByName","value","startwith","endwith","inputText_length","length","post","name","then","Response","data","total_words","forEach","product","word","push","compare_wrd","console","log","eigth_char","eigth_count"],"mappings":"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","sourcesContent":["import './App.css';\nimport {useState} from \"react\";\nimport Axios from \"axios\";\n\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport levenshtein from \"js-levenshtein\";\n\n\nfunction App() {\n\n  const [userinput, getWord] = useState(\"\");\n  const [nowordfounds, nowordfound] = useState(\"\");\n  const [total_word, total_word_found] = useState(\"\");\n\n  /* UseState For Print Data Character Wise */\n\n  const two_char = [];\n  const three_char = [];\n  const four_char = [];\n  const five_char = [];\n  const six_char = [];\n  const seven_char = [];\n  const eight_char = [];\n\n  var two_count = 0;\n  var three_count = 0;\n  var four_count = 0;\n  var five_count = 0;\n  var six_count = 0;\n  var seven_count = 0;\n  var eight_count = 0;\n\n  const [two_characters, two_character] = useState(\"\");\n  const [three_characters, three_character] = useState(\"\");\n  const [four_characters, four_character] = useState(\"\");\n  const [five_characters, five_character] = useState(\"\");\n  const [six_characters, six_character] = useState(\"\");\n  const [seven_characters, seven_character] = useState(\"\");\n  const [eight_characters, eight_character] = useState(\"\");\n\n  const [two_counts, two_word_count] = useState(\"\");\n  const [three_counts, three_word_count] = useState(\"\");\n  const [four_counts, four_word_count] = useState(\"\");\n  const [five_counts, five_word_count] = useState(\"\");\n  const [six_counts, six_word_count] = useState(\"\");\n  const [seven_counts, seven_word_count] = useState(\"\");\n  const [eight_counts, eight_word_count] = useState(\"\");\n\n\n  /* On Button Click Call Function */\n\n  const getWords = (event) =>{\n\n    const inputText = document.getElementsByName(\"userinput\")[0].value;\n    const startwith = document.getElementsByName(\"startwith\")[0].value;\n    const endwith = document.getElementsByName(\"endwith\")[0].value;\n    const inputText_length = inputText.length;\n\n    //post data to the node/express for data\n\n    Axios.post('http://localhost:8000/create',{name:inputText,startwith:startwith,endwith:endwith}).then((Response) => {\n     \n    // console.log(Response.data);\n   \n    /* Condition For Print Data Character Wise  START */\n\n    if(Response.data.length != 0){\n\n      /*  Print Total Finded Word */\n\n      const total_words = Response.data.length;\n      total_word_found(total_words);\n      \n      \n      /* Print Data Character Wise */\n      Response.data.forEach((product) => {\n       \n        \n          if(product.word.length == 2 && product.word.length <= inputText_length){\n\n             two_char.push( <p> {product.word} </p> )\n             two_count++;\n\n             if(product.word.length == inputText_length){\n                var compare_wrd = levenshtein(product.word, inputText);\n                console.log(compare_wrd);\n             }\n            \n            }\n          if(product.word.length == 3 && product.word.length <= inputText_length){\n\n            three_char.push( <p>{product.word} </p>)\n            three_count++;\n\n            if(product.word.length == inputText_length){\n                var compare_wrd = levenshtein(product.word, inputText);\n                console.log(compare_wrd);\n            }\n          }\n          if(product.word.length == 4 && product.word.length <= inputText_length){\n\n            four_char.push(<p> {product.word} </p> )\n            four_count++;\n\n            if(product.word.length == inputText_length){\n                var compare_wrd = levenshtein(product.word, inputText);\n                console.log(compare_wrd);\n                \n            }\n          }\n          if(product.word.length == 5 && product.word.length <= inputText_length){\n\n             five_char.push(<p> {product.word}</p>)\n             five_count++;\n\n            if(product.word.length == inputText_length){\n                var compare_wrd = levenshtein(product.word, inputText);\n                console.log(compare_wrd);\n            }\n\n          }\n          if(product.word.length == 6 && product.word.length <= inputText_length){\n\n            six_char.push( <p> {product.word}</p>)\n            six_count++;\n\n            if(product.word.length == inputText_length){\n                var compare_wrd = levenshtein(product.word, inputText);\n                console.log(compare_wrd);\n            }\n          }\n          if(product.word.length == 7 && product.word.length <= inputText_length){\n\n            seven_char.push( <p> {product.word}</p>)\n            seven_count++;\n\n            if(product.word.length == inputText_length){\n                var compare_wrd = levenshtein(product.word, inputText);\n                console.log(compare_wrd);\n            }\n          }\n          if(product.word.length == 8 && product.word.length <= inputText_length){\n\n            eigth_char.push( <p> {product.word}</p>)\n            eigth_count++;\n\n            if(product.word.length == inputText_length){\n                var compare_wrd = levenshtein(product.word, inputText);\n                console.log(compare_wrd);\n            }\n          }\n      })\n        \n        two_character(two_char);\n        three_character(three_char);\n        four_character(four_char);\n        five_character(five_char);\n        six_character(six_char);\n        seven_character(seven_char);\n        eight_character(eight_char);\n\n        two_word_count(two_count);\n        three_word_count(three_count);\n        four_word_count(four_count);\n        five_word_count(five_count);\n        six_word_count(six_count);\n        seven_word_count(seven_count);\n        eight_word_count(eight_count);\n      \n    }else{\n\n        total_word_found(\"No Word Found\");\n      \n    }\n\n\n    getWord(inputText);\n\n    });\n  }\n\n  return (\n    <>\n\n    <div className=\"App\">\n        <h1>Scrabble Letter Generator and Word Finder</h1>\n        <br/><label>Enter Letters</label>\n        <br/>\n        <br/>\n        <input type=\"text\" name=\"userinput\" id=\"userinput\" placeholder=\"ENTER LETTERS\"  />\n        <br/><br/>\n        \n        <input type=\"text\" name=\"startwith\" id=\"startwith\" placeholder=\"START WITH\"  />\n        <br/><br/>\n        <input type=\"text\" name=\"endwith\" id=\"endwith\" placeholder=\"END WITH\"  />\n        <br/><br/>\n        <button className=\"btn btn-primary\" onClick={event => getWords()}>Get Words</button>\n        <br/><br/>\n        <h1>INPUTED WORD</h1>\n       \n        <p>{userinput}</p>\n        <h1>TOTAL WORDS</h1>\n        <p>{total_word}</p>\n        <br/><br/>\n        <h1>WORDS</h1>\n        <div>\n\n         \n        </div>\n\n        <div className=\"w3-panel w3-card w3-red\">\n            <h2>2 letters word ({two_counts})</h2>\n            {two_characters}\n        </div>\n        <div className=\"w3-panel w3-card w3-red\">\n            <h2>3 letters word ({three_counts})</h2>\n            {three_characters}\n        </div>\n        <div className=\"w3-panel w3-card w3-red\">\n            <h2>4 letters word ({four_counts})</h2>\n            {four_characters}\n        </div>\n        <div className=\"w3-panel w3-card w3-red\">\n            <h2>5 letters word ({five_counts})</h2>\n            {five_characters}\n        </div>\n        <div className=\"w3-panel w3-card w3-red\">\n            <h2>6 letters word ({six_counts})</h2>\n            {six_characters}\n        </div>\n        <div className=\"w3-panel w3-card w3-red\">\n            <h2>7 letters word ({seven_counts})</h2>\n            {seven_characters}\n        </div>\n        <div className=\"w3-panel w3-card w3-red\">\n            <h2>8 letters word ({eight_counts})</h2>\n            {eight_characters}\n        </div>\n        \n        <p>{nowordfounds}</p>\n    \n    </div>\n   \n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}