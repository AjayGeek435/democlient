{"ast":null,"code":"var _jsxFileName = \"D:\\\\wordunscramble\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState } from \"react\";\nimport Axios from \"axios\";\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const list = [];\n  const [userinput, getWord] = useState(\"\");\n  const [alldata, showData] = useState([]);\n  const [total_chrs, total_chr] = useState([]);\n  const [nowordfounds, nowordfound] = useState(\"\");\n  const [total_word, total_word_found] = useState(\"\");\n  const [keys, words_index] = useState(\"\");\n  const [total_characters, total_character] = useState(\"\"); // On Button Click Call Function\n\n  const getWords = event => {\n    const inputText = document.getElementsByName(\"userinput\")[0].value;\n    const startwith = document.getElementsByName(\"startwith\")[0].value;\n    const endwith = document.getElementsByName(\"endwith\")[0].value; //post data to the node/express for data\n\n    Axios.post('http://localhost:8000/create', {\n      name: inputText,\n      startwith: startwith,\n      endwith: endwith\n    }).then(Response => {\n      if (Response.data.length != 0) {\n        const total_words = Response.data.length;\n        total_word_found(total_words);\n        showData(Response.data);\n        Response.data.forEach(product => {\n          if (product.word.split('').length == 7) {\n            list.push( /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [product.word, product.word.split('').length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this));\n          }\n\n          total_chr(list);\n        });\n        {\n          Response.data.map((answer, i) => {\n            const keys = answer.id;\n            const word_total_character = answer.word.split('').length;\n            words_index(keys);\n            total_character(word_total_character);\n          });\n        }\n      } else {\n        total_word_found(\"0\");\n        showData(\"\");\n      }\n\n      getWord(inputText);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Scrabble Letter Generator and Word Finder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter Letters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"userinput\",\n        id: \"userinput\",\n        placeholder: \"ENTER LETTERS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"text-field-icon\",\n        \"data-toggle\": \"tooltip\",\n        \"data-placement\": \"top\",\n        title: \"\",\n        \"data-original-title\": \"Filter for words that end in these letters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"startwith\",\n        id: \"startwith\",\n        placeholder: \"START WITH\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"endwith\",\n        id: \"endwith\",\n        placeholder: \"END WITH\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: event => getWords(),\n        children: \"Get Words\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"INPUTED WORD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: userinput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TOTAL WORDS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: total_word\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"WORDS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Key\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Words\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Letters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: alldata.map(words => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: words.word\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: words.word.split('').length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this)\n            }, void 0, false))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w3-panel w3-card w3-red\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"7 letters word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), total_chrs]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: nowordfounds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"/9v17KikxQG4Y8NvHTBc6VgUe7k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/wordunscramble/client/src/App.js"],"names":["useState","Axios","Header","Footer","App","list","userinput","getWord","alldata","showData","total_chrs","total_chr","nowordfounds","nowordfound","total_word","total_word_found","keys","words_index","total_characters","total_character","getWords","event","inputText","document","getElementsByName","value","startwith","endwith","post","name","then","Response","data","length","total_words","forEach","product","word","split","push","map","answer","i","id","word_total_character","words"],"mappings":"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","sourcesContent":["import './App.css';\nimport {useState} from \"react\";\nimport Axios from \"axios\";\n\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nfunction App() {\n\n  const list = [];\n  const [userinput, getWord] = useState(\"\");\n\n  const [alldata, showData] = useState([]);\n  const [total_chrs, total_chr] = useState([]);\n\n  const [nowordfounds, nowordfound] = useState(\"\");\n  const [total_word, total_word_found] = useState(\"\");\n\n  const [keys, words_index] = useState(\"\");\n  const [total_characters, total_character] = useState(\"\");\n\n  // On Button Click Call Function\n\n  const getWords = (event) =>{\n\n    const inputText = document.getElementsByName(\"userinput\")[0].value;\n    const startwith = document.getElementsByName(\"startwith\")[0].value;\n    const endwith = document.getElementsByName(\"endwith\")[0].value;\n\n    //post data to the node/express for data\n\n    Axios.post('http://localhost:8000/create',{name:inputText,startwith:startwith,endwith:endwith}).then((Response) => {\n     \n    \n    if(Response.data.length != 0){\n\n      const total_words = Response.data.length;\n      total_word_found(total_words);\n      showData(Response.data);\n     \n      Response.data.forEach((product) => {\n\n          if(product.word.split('').length == 7){\n            list.push(\n              <p>\n                  {product.word}\n                  {product.word.split('').length}\n              </p>\n           )\n          }\n       \n       total_chr(list);\n      })\n      \n      {Response.data.map((answer, i) => {     \n      \n        const keys = answer.id\n        const word_total_character = answer.word.split('').length;\n        words_index(keys);\n        total_character(word_total_character);\n     })}\n\n\n\n    }else{\n\n      total_word_found(\"0\");\n      showData(\"\");\n    \n    }\n    getWord(inputText);\n\n    });\n  }\n\n  return (\n    <>\n\n    <div className=\"App\">\n        <h1>Scrabble Letter Generator and Word Finder</h1>\n        <br/><label>Enter Letters</label>\n        <br/>\n        <br/>\n        <input type=\"text\" name=\"userinput\" id=\"userinput\" placeholder=\"ENTER LETTERS\"  />\n        <br/><br/>\n        <span class=\"text-field-icon\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"Filter for words that end in these letters\"></span>\n        <input type=\"text\" name=\"startwith\" id=\"startwith\" placeholder=\"START WITH\"  />\n        <br/><br/>\n        <input type=\"text\" name=\"endwith\" id=\"endwith\" placeholder=\"END WITH\"  />\n        <br/><br/>\n        <button className=\"btn btn-primary\" onClick={event => getWords()}>Get Words</button>\n        <br/><br/>\n        <h1>INPUTED WORD</h1>\n       \n        <p>{userinput}</p>\n        <h1>TOTAL WORDS</h1>\n        <p>{total_word}</p>\n        <br/><br/>\n        <h1>WORDS</h1>\n        <div>\n     \n        <table>\n            <thead>\n              <th>Key</th>\n              <th>Words</th>\n              <th>Letters</th>\n            </thead>\n            <tbody>\n            {\n              alldata.map((words) => \n                <>\n                  <tr>\n                      <td>{words.word}</td>\n                      <td>{words.word.split('').length}</td>\n                  </tr>\n                </>)\n            }\n            </tbody>\n          </table> \n         \n        </div>\n        <div className=\"w3-panel w3-card w3-red\">\n            <h2>7 letters word</h2>\n            {total_chrs}\n        </div>\n        <p>{nowordfounds}</p>\n    \n    </div>\n   \n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}