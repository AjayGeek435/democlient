{"ast":null,"code":"var _jsxFileName = \"D:\\\\wordunscramble\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState } from \"react\";\nimport Axios from \"axios\";\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const list = [];\n  const [userinput, getWord] = useState(\"\");\n  const [alldata, showData] = useState([]);\n  const [nowordfounds, nowordfound] = useState(\"\");\n  const [total_word, total_word_found] = useState(\"\"); //words data \n\n  const [keys, words_index] = useState(\"\");\n  const [total_characters, total_character] = useState(\"\");\n\n  const getWords = event => {\n    const inputText = document.getElementsByName(\"userinput\")[0].value;\n    const startwith = document.getElementsByName(\"startwith\")[0].value;\n    const endwith = document.getElementsByName(\"endwith\")[0].value;\n    Axios.post('http://localhost:8000/create', {\n      name: inputText,\n      startwith: startwith,\n      endwith: endwith\n    }).then(Response => {\n      if (Response.data.length != 0) {\n        const total_words = Response.data.length;\n        total_word_found(total_words);\n        showData(Response.data);\n        Response.data.forEach(product => {\n          list.push( /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [product.id, product.word, product.word.split('').length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 18\n          }, this));\n        });\n        {\n          Response.data.map((answer, i) => {\n            const keys = answer.id;\n            const word_total_character = answer.word.split('').length;\n            words_index(keys);\n            total_character(word_total_character);\n          });\n        }\n      } else {\n        total_word_found(\"0\");\n        showData(\"\");\n      }\n\n      getWord(inputText);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Scrabble Letter Generator and Word Finder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter Letters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"userinput\",\n        id: \"userinput\",\n        placeholder: \"ENTER LETTERS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"startwith\",\n        id: \"startwith\",\n        placeholder: \"START WITH\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"endwith\",\n        id: \"endwith\",\n        placeholder: \"END WITH\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: event => getWords(),\n        children: \"Get Words\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"INPUTED WORD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: userinput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TOTAL WORDS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: total_word\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"WORDS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Key\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Words\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Letters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), alldata.map(words => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: words.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: words.word\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: words.word.split('').length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 19\n            }, this)\n          }, void 0, false))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: alldata.map(words => {\n          console.log(words.word.split('').length);\n\n          /*#__PURE__*/\n          _jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"helllo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 23\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: nowordfounds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"11OPgWnUp1D7Ec5IX+3ptBIUz4M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/wordunscramble/client/src/App.js"],"names":["useState","Axios","Header","Footer","App","list","userinput","getWord","alldata","showData","nowordfounds","nowordfound","total_word","total_word_found","keys","words_index","total_characters","total_character","getWords","event","inputText","document","getElementsByName","value","startwith","endwith","post","name","then","Response","data","length","total_words","forEach","product","push","id","word","split","map","answer","i","word_total_character","words","console","log"],"mappings":"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","sourcesContent":["import './App.css';\nimport {useState} from \"react\";\nimport Axios from \"axios\";\n\n\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nfunction App() {\n  const list = [];\n  const [userinput, getWord] = useState(\"\");\n  const [alldata, showData] = useState([]);\n \n\n  const [nowordfounds, nowordfound] = useState(\"\");\n  const [total_word, total_word_found] = useState(\"\");\n\n  //words data \n\n  const [keys, words_index] = useState(\"\");\n  const [total_characters, total_character] = useState(\"\");\n\n  const getWords = (event) =>{\n\n    const inputText = document.getElementsByName(\"userinput\")[0].value;\n    const startwith = document.getElementsByName(\"startwith\")[0].value;\n    const endwith = document.getElementsByName(\"endwith\")[0].value;\n\n    Axios.post('http://localhost:8000/create',{name:inputText,startwith:startwith,endwith:endwith}).then((Response) => {\n     \n     \n    if(Response.data.length != 0){\n\n      const total_words = Response.data.length;\n      total_word_found(total_words);\n      showData(Response.data);\n     \n      Response.data.forEach((product) => {\n       list.push(<p>{product.id}{product.word}{product.word.split('').length}</p>)\n     \n      })\n      \n      {Response.data.map((answer, i) => {     \n      \n        const keys = answer.id\n        const word_total_character = answer.word.split('').length;\n        words_index(keys);\n        total_character(word_total_character);\n     })}\n\n\n\n    }else{\n\n      total_word_found(\"0\");\n      showData(\"\");\n    \n    }\n    getWord(inputText);\n\n    });\n  }\n\n  return (\n    <>\n    <Header />\n    <div className=\"App\">\n        <h1>Scrabble Letter Generator and Word Finder</h1>\n        <br/><label>Enter Letters</label>\n        <br/>\n        <br/>\n        <input type=\"text\" name=\"userinput\" id=\"userinput\" placeholder=\"ENTER LETTERS\"  />\n        <br/><br/>\n        <input type=\"text\" name=\"startwith\" id=\"startwith\" placeholder=\"START WITH\"  />\n        <br/><br/>\n        <input type=\"text\" name=\"endwith\" id=\"endwith\" placeholder=\"END WITH\"  />\n        <br/><br/>\n        <button className=\"btn btn-primary\" onClick={event => getWords()}>Get Words</button>\n        <br/><br/>\n        <h1>INPUTED WORD</h1>\n       \n        <p>{userinput}</p>\n        <h1>TOTAL WORDS</h1>\n        <p>{total_word}</p>\n        <br/><br/>\n        <h1>WORDS</h1>\n        <div>\n        <table>\n            <tr>\n              <th>Key</th>\n              <th>Words</th>\n              <th>Letters</th>\n            </tr>\n            {\n              alldata.map((words) => \n                <>\n                  <tr>\n                      <td>{words.id}</td>\n                      <td>{words.word}</td>\n                      <td>{words.word.split('').length}</td>\n                  </tr>\n                </>)\n            }\n          </table> \n         \n        </div>\n        <div>\n           {\n              alldata.map((words) => {\n                  console.log(words.word.split('').length);\n                  <>\n                      <p>helllo</p>\n                  </>\n                })\n            }\n      </div>\n        \n        <p>{nowordfounds}</p>\n    \n    </div>\n    <Footer />\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}